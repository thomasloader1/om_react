{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\om_react\\\\src\\\\components\\\\VentaPresencial\\\\Stepper\\\\SelectCountryStep.jsx\",\n    _s = $RefreshSig$();\n\nimport { useFormikContext } from 'formik';\nimport React, { useContext } from 'react';\nimport { useEffect } from 'react';\nimport { AppContext } from '../../PasarelaCobros/Provider/StateProvider';\nimport ButtonField from '../../PasarelaCobros/RadioButton/ButtonField';\nimport { FormStep } from './MultiStep';\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SelectCountryStep() {\n  _s();\n\n  const {\n    options,\n    setOptions,\n    userInfo,\n    setUserInfo,\n    formikValues,\n    appEnv\n  } = useContext(AppContext);\n  const {\n    countryOptions,\n    sideItemOptionsVP\n  } = options;\n  const {\n    stepOne\n  } = userInfo;\n  const {\n    setFieldValue,\n    ...formik\n  } = useFormikContext();\n  useEffect(() => {\n    console.log({\n      appEnv\n    });\n\n    if (appEnv != null && (appEnv === null || appEnv === void 0 ? void 0 : appEnv.country) !== null && (formikValues === null || formikValues === void 0 ? void 0 : formikValues.country) !== null) {\n      setFieldValue('country', appEnv.country); //console.log({ formik });\n    }\n  }, [appEnv === null || appEnv === void 0 ? void 0 : appEnv.country, formikValues === null || formikValues === void 0 ? void 0 : formikValues.country]);\n\n  const handleClick = propsOfContryOptions => {\n    const {\n      value,\n      idElement\n    } = propsOfContryOptions;\n    sideItemOptionsVP[0].value = value;\n    stepOne.isoRef = idElement;\n    stepOne.value = value;\n    setOptions({ ...options,\n      sideItemOptionsVP: [...sideItemOptionsVP]\n    });\n    setUserInfo({ ...userInfo\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormStep, {\n    stepNumber: 1,\n    stepName: \"Seleccione un pa\\xEDs\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"pais-grid\",\n      className: \"grid-country\",\n      children: countryOptions.map(_ref => {\n        let { ...props\n        } = _ref;\n        return /*#__PURE__*/_createElement(ButtonField, { ...props,\n          className: `grid-country-item button ${props.value === stepOne.value && 'active'}`,\n          showText: true,\n          id: props.idElement,\n          name: \"country\",\n          key: props.idElement,\n          onClick: () => {\n            handleClick(props);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SelectCountryStep, \"y7EHqiOhO9dT4r1Q98sbD1DXIKw=\", false, function () {\n  return [useFormikContext];\n});\n\n_c = SelectCountryStep;\nexport default SelectCountryStep;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectCountryStep\");","map":{"version":3,"names":["useFormikContext","React","useContext","useEffect","AppContext","ButtonField","FormStep","SelectCountryStep","options","setOptions","userInfo","setUserInfo","formikValues","appEnv","countryOptions","sideItemOptionsVP","stepOne","setFieldValue","formik","console","log","country","handleClick","propsOfContryOptions","value","idElement","isoRef","map","props"],"sources":["C:/xampp/htdocs/om_react/src/components/VentaPresencial/Stepper/SelectCountryStep.jsx"],"sourcesContent":["import { useFormikContext } from 'formik';\r\nimport React, { useContext } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { AppContext } from '../../PasarelaCobros/Provider/StateProvider';\r\nimport ButtonField from '../../PasarelaCobros/RadioButton/ButtonField';\r\n\r\nimport { FormStep } from './MultiStep';\r\n\r\nfunction SelectCountryStep() {\r\n  const { options, setOptions, userInfo, setUserInfo, formikValues, appEnv } =\r\n    useContext(AppContext);\r\n  const { countryOptions, sideItemOptionsVP } = options;\r\n  const { stepOne } = userInfo;\r\n  const { setFieldValue, ...formik } = useFormikContext();\r\n\r\n  useEffect(() => {\r\n    console.log({ appEnv });\r\n    if (\r\n      appEnv != null &&\r\n      appEnv?.country !== null &&\r\n      formikValues?.country !== null\r\n    ) {\r\n      setFieldValue('country', appEnv.country);\r\n      //console.log({ formik });\r\n    }\r\n  }, [appEnv?.country, formikValues?.country]);\r\n\r\n  const handleClick = (propsOfContryOptions) => {\r\n    const { value, idElement } = propsOfContryOptions;\r\n    sideItemOptionsVP[0].value = value;\r\n    stepOne.isoRef = idElement;\r\n    stepOne.value = value;\r\n\r\n    setOptions({\r\n      ...options,\r\n      sideItemOptionsVP: [...sideItemOptionsVP],\r\n    });\r\n\r\n    setUserInfo({\r\n      ...userInfo,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FormStep stepNumber={1} stepName=\"Seleccione un paÃ­s\">\r\n      <div id=\"pais-grid\" className=\"grid-country\">\r\n        {countryOptions.map(({ ...props }) => (\r\n          <ButtonField\r\n            {...props}\r\n            className={`grid-country-item button ${\r\n              props.value === stepOne.value && 'active'\r\n            }`}\r\n            showText={true}\r\n            id={props.idElement}\r\n            name=\"country\"\r\n            key={props.idElement}\r\n            onClick={() => {\r\n              handleClick(props);\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </FormStep>\r\n  );\r\n}\r\n\r\nexport default SelectCountryStep;\r\n"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,QAAjC;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,6CAA3B;AACA,OAAOC,WAAP,MAAwB,8CAAxB;AAEA,SAASC,QAAT,QAAyB,aAAzB;;;;AAEA,SAASC,iBAAT,GAA6B;EAAA;;EAC3B,MAAM;IAAEC,OAAF;IAAWC,UAAX;IAAuBC,QAAvB;IAAiCC,WAAjC;IAA8CC,YAA9C;IAA4DC;EAA5D,IACJX,UAAU,CAACE,UAAD,CADZ;EAEA,MAAM;IAAEU,cAAF;IAAkBC;EAAlB,IAAwCP,OAA9C;EACA,MAAM;IAAEQ;EAAF,IAAcN,QAApB;EACA,MAAM;IAAEO,aAAF;IAAiB,GAAGC;EAApB,IAA+BlB,gBAAgB,EAArD;EAEAG,SAAS,CAAC,MAAM;IACdgB,OAAO,CAACC,GAAR,CAAY;MAAEP;IAAF,CAAZ;;IACA,IACEA,MAAM,IAAI,IAAV,IACA,CAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEQ,OAAR,MAAoB,IADpB,IAEA,CAAAT,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAES,OAAd,MAA0B,IAH5B,EAIE;MACAJ,aAAa,CAAC,SAAD,EAAYJ,MAAM,CAACQ,OAAnB,CAAb,CADA,CAEA;IACD;EACF,CAVQ,EAUN,CAACR,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEQ,OAAT,EAAkBT,YAAlB,aAAkBA,YAAlB,uBAAkBA,YAAY,CAAES,OAAhC,CAVM,CAAT;;EAYA,MAAMC,WAAW,GAAIC,oBAAD,IAA0B;IAC5C,MAAM;MAAEC,KAAF;MAASC;IAAT,IAAuBF,oBAA7B;IACAR,iBAAiB,CAAC,CAAD,CAAjB,CAAqBS,KAArB,GAA6BA,KAA7B;IACAR,OAAO,CAACU,MAAR,GAAiBD,SAAjB;IACAT,OAAO,CAACQ,KAAR,GAAgBA,KAAhB;IAEAf,UAAU,CAAC,EACT,GAAGD,OADM;MAETO,iBAAiB,EAAE,CAAC,GAAGA,iBAAJ;IAFV,CAAD,CAAV;IAKAJ,WAAW,CAAC,EACV,GAAGD;IADO,CAAD,CAAX;EAGD,CAdD;;EAgBA,oBACE,QAAC,QAAD;IAAU,UAAU,EAAE,CAAtB;IAAyB,QAAQ,EAAC,uBAAlC;IAAA,uBACE;MAAK,EAAE,EAAC,WAAR;MAAoB,SAAS,EAAC,cAA9B;MAAA,UACGI,cAAc,CAACa,GAAf,CAAmB;QAAA,IAAC,EAAE,GAAGC;QAAL,CAAD;QAAA,oBAClB,eAAC,WAAD,OACMA,KADN;UAEE,SAAS,EAAG,4BACVA,KAAK,CAACJ,KAAN,KAAgBR,OAAO,CAACQ,KAAxB,IAAiC,QAClC,EAJH;UAKE,QAAQ,EAAE,IALZ;UAME,EAAE,EAAEI,KAAK,CAACH,SANZ;UAOE,IAAI,EAAC,SAPP;UAQE,GAAG,EAAEG,KAAK,CAACH,SARb;UASE,OAAO,EAAE,MAAM;YACbH,WAAW,CAACM,KAAD,CAAX;UACD,CAXH;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADkB;MAAA,CAAnB;IADH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD;;GAxDQrB,iB;UAK8BP,gB;;;KAL9BO,iB;AA0DT,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}