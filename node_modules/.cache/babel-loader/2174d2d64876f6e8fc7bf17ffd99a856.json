{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\om_react\\\\src\\\\components\\\\VentaPresencial\\\\App\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport * as Yup from 'yup';\nimport Header from '../../PasarelaCobros/Header';\nimport MultiStep from '../Stepper/MultiStep';\nimport LeadStep from '../Stepper/Lead';\nimport ContactStep from '../Stepper/Contact';\nimport SelectCourse from '../Stepper/SelectCourse';\nimport SelectCountryStep from '../Stepper/SelectCountryStep';\nimport { useAppEnv } from '../Hook/useAppEnv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VentaPresencialApp() {\n  _s();\n\n  const {\n    setFormikValues,\n    saveLead,\n    saveContact,\n    updateProgress,\n    stepNumberGlobal,\n    setStepNumberGlobal,\n    appEnv\n  } = useAppEnv(); // console.log({ stepNumber });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container is-max-widescreen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pasarela columns mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(MultiStep, {\n          stepStateNumber: {\n            stepNumberGlobal,\n            setStepNumberGlobal\n          },\n          className: \"pasarela-1 column seleccion-pais\",\n          initialValues: {\n            country: '',\n            name: '',\n            username: '',\n            profession: '',\n            telephone: '',\n            speciality: '',\n            method_contact: ''\n          },\n          onSubmit: async values => {},\n          children: [/*#__PURE__*/_jsxDEV(SelectCountryStep, {\n            onSubmit: values => {\n              setFormikValues(prevFormikValues => ({ ...prevFormikValues,\n                ...values\n              }));\n              updateProgress(values, 2);\n            },\n            validationSchema: Yup.object({\n              country: Yup.string().required('El pais es requerido')\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LeadStep, {\n            onSubmit: values => {\n              setFormikValues(prevFormikValues => ({ ...prevFormikValues,\n                ...values\n              }));\n              saveLead(values);\n            },\n            validationSchema: Yup.object({\n              name: Yup.string().required('El nombre es requerido'),\n              username: Yup.string().required('El apellido es requerido'),\n              email: Yup.string().required('El e-mail es requerido'),\n              telephone: Yup.string().required('El telefono es requerido'),\n              profession: Yup.string().required('La profesion es requerido'),\n              speciality: Yup.string().required('La especialidad es requerido'),\n              method_contact: Yup.string().required('El metodo de contacto es requerido')\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ContactStep, {\n            onSubmit: values => {\n              setFormikValues(prevFormikValues => ({ ...prevFormikValues,\n                ...values\n              }));\n              saveContact();\n            },\n            validationSchema: Yup.object({\n              dni: Yup.number().required('El dni es requerido'),\n              sex: Yup.string().required('El sexo es requerido'),\n              date_of_birth: Yup.string().required('La fecha de nacimiento es requerida'),\n              registration_number: Yup.number('El campo deben ser solo numeros').required('El nummero de matricula es requerido'),\n              area_of_work: Yup.string().required('El area de trabajo es requerida'),\n              training_interest: Yup.string().required('El interes de formacion'),\n              province_state: Yup.string().required('La provincia o estado son requeridos'),\n              country: Yup.string().required('El pais es requerido'),\n              postal_code: Yup.number('El campo deben ser solo numeros').required('El codigo postal es requerido'),\n              street: Yup.string().required('La direccion es requerida'),\n              locality: Yup.string().required('La localidad es requerida')\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SelectCourse, {\n            onSubmit: values => {\n              setFormikValues(prevFormikValues => ({ ...prevFormikValues,\n                ...values\n              }));\n            },\n            validationSchema: Yup.object({})\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(appEnv, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(VentaPresencialApp, \"+4OtRE7GdEnyXrmwD3pA1u8ZjAU=\", false, function () {\n  return [useAppEnv];\n});\n\n_c = VentaPresencialApp;\nexport default VentaPresencialApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"VentaPresencialApp\");","map":{"version":3,"names":["React","Yup","Header","MultiStep","LeadStep","ContactStep","SelectCourse","SelectCountryStep","useAppEnv","VentaPresencialApp","setFormikValues","saveLead","saveContact","updateProgress","stepNumberGlobal","setStepNumberGlobal","appEnv","country","name","username","profession","telephone","speciality","method_contact","values","prevFormikValues","object","string","required","email","dni","number","sex","date_of_birth","registration_number","area_of_work","training_interest","province_state","postal_code","street","locality","JSON","stringify"],"sources":["C:/xampp/htdocs/om_react/src/components/VentaPresencial/App/index.jsx"],"sourcesContent":["import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport Header from '../../PasarelaCobros/Header';\r\nimport MultiStep from '../Stepper/MultiStep';\r\nimport LeadStep from '../Stepper/Lead';\r\nimport ContactStep from '../Stepper/Contact';\r\nimport SelectCourse from '../Stepper/SelectCourse';\r\nimport SelectCountryStep from '../Stepper/SelectCountryStep';\r\nimport { useAppEnv } from '../Hook/useAppEnv';\r\n\r\nfunction VentaPresencialApp() {\r\n  const {\r\n    setFormikValues,\r\n    saveLead,\r\n    saveContact,\r\n    updateProgress,\r\n    stepNumberGlobal,\r\n    setStepNumberGlobal,\r\n    appEnv,\r\n  } = useAppEnv();\r\n\r\n  // console.log({ stepNumber });\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <section className=\"container is-max-widescreen\">\r\n        <div className=\"pasarela columns mx-auto\">\r\n          <MultiStep\r\n            stepStateNumber={{ stepNumberGlobal, setStepNumberGlobal }}\r\n            className=\"pasarela-1 column seleccion-pais\"\r\n            initialValues={{\r\n              country: '',\r\n              name: '',\r\n              username: '',\r\n              profession: '',\r\n              telephone: '',\r\n              speciality: '',\r\n              method_contact: '',\r\n            }}\r\n            onSubmit={async (values) => {}}\r\n          >\r\n            <SelectCountryStep\r\n              onSubmit={(values) => {\r\n                setFormikValues((prevFormikValues) => ({\r\n                  ...prevFormikValues,\r\n                  ...values,\r\n                }));\r\n                updateProgress(values, 2);\r\n              }}\r\n              validationSchema={Yup.object({\r\n                country: Yup.string().required('El pais es requerido'),\r\n              })}\r\n            />\r\n\r\n            <LeadStep\r\n              onSubmit={(values) => {\r\n                setFormikValues((prevFormikValues) => ({\r\n                  ...prevFormikValues,\r\n                  ...values,\r\n                }));\r\n\r\n                saveLead(values);\r\n              }}\r\n              validationSchema={Yup.object({\r\n                name: Yup.string().required('El nombre es requerido'),\r\n                username: Yup.string().required('El apellido es requerido'),\r\n                email: Yup.string().required('El e-mail es requerido'),\r\n                telephone: Yup.string().required('El telefono es requerido'),\r\n                profession: Yup.string().required('La profesion es requerido'),\r\n                speciality: Yup.string().required(\r\n                  'La especialidad es requerido'\r\n                ),\r\n                method_contact: Yup.string().required(\r\n                  'El metodo de contacto es requerido'\r\n                ),\r\n              })}\r\n            />\r\n            <ContactStep\r\n              onSubmit={(values) => {\r\n                setFormikValues((prevFormikValues) => ({\r\n                  ...prevFormikValues,\r\n                  ...values,\r\n                }));\r\n\r\n                saveContact();\r\n              }}\r\n              validationSchema={Yup.object({\r\n                dni: Yup.number().required('El dni es requerido'),\r\n                sex: Yup.string().required('El sexo es requerido'),\r\n                date_of_birth: Yup.string().required('La fecha de nacimiento es requerida'),\r\n                registration_number: Yup.number('El campo deben ser solo numeros').required('El nummero de matricula es requerido'),\r\n                area_of_work: Yup.string().required('El area de trabajo es requerida'),\r\n                training_interest: Yup.string().required('El interes de formacion'),\r\n                province_state: Yup.string().required('La provincia o estado son requeridos'),\r\n                country: Yup.string().required('El pais es requerido'),\r\n                postal_code: Yup.number('El campo deben ser solo numeros').required('El codigo postal es requerido'),\r\n                street: Yup.string().required('La direccion es requerida'),\r\n                locality: Yup.string().required('La localidad es requerida'),\r\n              })}\r\n            />\r\n            <SelectCourse\r\n              onSubmit={(values) => {\r\n                setFormikValues((prevFormikValues) => ({\r\n                  ...prevFormikValues,\r\n                  ...values,\r\n                }));\r\n              }}\r\n              validationSchema={Yup.object({})}\r\n            />\r\n\r\n            <div></div>\r\n\r\n          </MultiStep>\r\n        </div>\r\n      </section>\r\n      <pre>{JSON.stringify(appEnv, null, 2)}</pre>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VentaPresencialApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}