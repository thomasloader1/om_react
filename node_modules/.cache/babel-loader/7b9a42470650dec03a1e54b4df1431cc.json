{"ast":null,"code":"import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nconst types = {\n  decay,\n  keyframes: keyframes,\n  tween: keyframes,\n  spring\n};\n\nfunction loopElapsed(elapsed, duration) {\n  let delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  return elapsed - duration - delay;\n}\n\nfunction reverseElapsed(elapsed) {\n  let duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let isForwardPlayback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;\n}\n\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n  return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\n\nconst framesync = update => {\n  const passTimestamp = _ref => {\n    let {\n      delta\n    } = _ref;\n    return update(delta);\n  };\n\n  return {\n    start: () => sync.update(passTimestamp, true),\n    stop: () => cancelSync.update(passTimestamp)\n  };\n};\n\nfunction animate(_ref2) {\n  let {\n    duration,\n    driver = framesync,\n    elapsed = 0,\n    repeat: repeatMax = 0,\n    repeatType = \"loop\",\n    repeatDelay = 0,\n    keyframes,\n    autoplay = true,\n    onPlay,\n    onStop,\n    onComplete,\n    onRepeat,\n    onUpdate,\n    type = \"keyframes\",\n    ...options\n  } = _ref2;\n\n  var _a, _b;\n\n  let driverControls;\n  let repeatCount = 0;\n  let computedDuration = duration;\n  let latest;\n  let isComplete = false;\n  let isForwardPlayback = true;\n  let interpolateFromNumber;\n  const animator = types[keyframes.length > 2 ? \"keyframes\" : type];\n  const origin = keyframes[0];\n  const target = keyframes[keyframes.length - 1];\n\n  if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n    interpolateFromNumber = interpolate([0, 100], [origin, target], {\n      clamp: false\n    });\n    keyframes = [0, 100];\n  }\n\n  const animation = animator({ ...options,\n    duration,\n    keyframes\n  });\n\n  function repeat() {\n    repeatCount++;\n\n    if (repeatType === \"reverse\") {\n      isForwardPlayback = repeatCount % 2 === 0;\n      elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n    } else {\n      elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n      if (repeatType === \"mirror\") animation.flipTarget();\n    }\n\n    isComplete = false;\n    onRepeat && onRepeat();\n  }\n\n  function complete() {\n    driverControls.stop();\n    onComplete && onComplete();\n  }\n\n  function update(delta) {\n    if (!isForwardPlayback) delta = -delta;\n    elapsed += delta;\n\n    if (!isComplete) {\n      const state = animation.next(Math.max(0, elapsed));\n      latest = state.value;\n      if (interpolateFromNumber) latest = interpolateFromNumber(latest);\n      isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n    }\n\n    onUpdate && onUpdate(latest);\n\n    if (isComplete) {\n      if (repeatCount === 0) {\n        computedDuration = computedDuration !== undefined ? computedDuration : elapsed;\n      }\n\n      if (repeatCount < repeatMax) {\n        hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n      } else {\n        complete();\n      }\n    }\n  }\n\n  function play() {\n    onPlay && onPlay();\n    driverControls = driver(update);\n    driverControls.start();\n  }\n\n  autoplay && play();\n  return {\n    stop: () => {\n      onStop && onStop();\n      driverControls.stop();\n    },\n    sample: t => {\n      return animation.next(Math.max(0, t)).value;\n    }\n  };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };","map":{"version":3,"names":["keyframes","spring","decay","sync","cancelSync","interpolate","types","tween","loopElapsed","elapsed","duration","delay","reverseElapsed","isForwardPlayback","hasRepeatDelayElapsed","framesync","update","passTimestamp","delta","start","stop","animate","driver","repeat","repeatMax","repeatType","repeatDelay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","type","options","_a","_b","driverControls","repeatCount","computedDuration","latest","isComplete","interpolateFromNumber","animator","length","origin","target","needsInterpolation","call","clamp","animation","flipTarget","complete","state","next","Math","max","value","done","undefined","play","sample","t"],"sources":["C:/xampp/htdocs/om_react/node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs"],"sourcesContent":["import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes.length > 2 ? \"keyframes\" : type];\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls.stop();\n        },\n        sample: (t) => {\n            return animation.next(Math.max(0, t)).value;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}