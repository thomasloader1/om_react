{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\om_react\\\\src\\\\components\\\\VentaPresencial\\\\Stepper\\\\MultiStep.jsx\",\n    _s = $RefreshSig$();\n\nimport { Form, Formik } from 'formik';\nimport React, { useState, useContext } from 'react';\nimport { Block, Notification } from 'react-bulma-components';\nimport { CSSTransition, SwitchTransition } from 'react-transition-group';\nimport InfoNotify from '../../PasarelaCobros/InfoNotify';\nimport { AppContext } from '../../PasarelaCobros/Provider/StateProvider';\nimport Side from '../Side';\nimport FormNavigation from '../StepControl/FormNavigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MultiStep = _ref => {\n  _s();\n\n  let {\n    children,\n    initialValues,\n    className,\n    onSubmit,\n    stepStateNumber\n  } = _ref;\n  const {\n    options,\n    setOptions,\n    formRef\n  } = useContext(AppContext);\n  const {\n    stepNumberGlobal,\n    setStepNumberGlobal\n  } = stepStateNumber;\n  const {\n    sideItemOptionsVP\n  } = options;\n  const [spanshot, setSpanshot] = useState(initialValues);\n  const steps = React.Children.toArray(children);\n  const step = steps[stepNumberGlobal];\n  const totalSteps = steps.length;\n  const isLastStep = stepNumberGlobal === totalSteps - 1;\n  console.log({\n    steps,\n    step,\n    stepNumberGlobal\n  });\n\n  const next = values => {\n    setSpanshot(values);\n    const indexOfNextStep = stepNumberGlobal + 1;\n    sideItemOptionsVP[stepNumberGlobal].status = 'completed';\n    sideItemOptionsVP[indexOfNextStep].status = 'current';\n    setOptions(prevState => ({ ...prevState,\n      sideItemOptionsVP: [...sideItemOptionsVP]\n    })); //setStepNumber(stepNumber + 1);\n\n    setStepNumberGlobal(step => step + 1);\n  };\n\n  const previous = values => {\n    setSpanshot(values);\n    const indexOfPrevStep = stepNumberGlobal - 1;\n    sideItemOptionsVP[stepNumberGlobal].status = '';\n    sideItemOptionsVP[indexOfPrevStep].status = 'current';\n    setOptions(prevState => ({ ...prevState,\n      sideItemOptionsVP: [...sideItemOptionsVP]\n    })); //setStepNumber(stepNumber - 1);\n\n    setStepNumberGlobal(step => step - 1);\n  };\n\n  const handleSubmit = async (values, actions) => {\n    if (step.props.onSubmit) {\n      await step.props.onSubmit(values);\n    }\n\n    if (isLastStep) {\n      return onSubmit(values, actions);\n    } else {\n      actions.setTouched({});\n      next(values);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(SwitchTransition, {\n    children: /*#__PURE__*/_jsxDEV(CSSTransition, {\n      addEndListener: (node, done) => node.addEventListener('transitionend', done, false),\n      classNames: \"fade\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: spanshot,\n        onSubmit: handleSubmit,\n        validationSchema: step.props.validationSchema,\n        children: formik => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            className: className,\n            ref: formRef,\n            children: [step, formik.errors && Object.keys(formik.errors).length > 0 && /*#__PURE__*/_jsxDEV(Block, {\n              style: {\n                margin: '1rem 0'\n              },\n              children: /*#__PURE__*/_jsxDEV(Notification, {\n                color: \"danger\",\n                light: \"true\",\n                children: Object.entries(formik.errors).map(e => /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"field\",\n                  children: e[1]\n                }, e[0], false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this), formik.values && Object.entries(formik.values).map(e => {\n              return /*#__PURE__*/_jsxDEV(InfoNotify, {\n                messages: e\n              }, e[0], false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 28\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(FormNavigation, {\n              isLastStep: isLastStep,\n              hasPrevious: stepNumberGlobal > 0,\n              onBackClick: () => previous(formik.values)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Side, {\n            options: options.sideItemOptionsVP,\n            stepStateNumber: {\n              stepNumberGlobal,\n              setStepNumberGlobal\n            },\n            formikInstance: formik\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, stepNumberGlobal, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MultiStep, \"M4cwQeEvZtrl5LJ/Ie7Xd1uKKQw=\");\n\n_c = MultiStep;\nexport default MultiStep;\nexport const FormStep = _ref2 => {\n  let {\n    stepNumber = 0,\n    stepName = '',\n    children\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [stepNumber !== 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title is-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"has-text-white has-background-black is-circle\",\n        children: stepNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), stepName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), children]\n  }, void 0, true);\n};\n_c2 = FormStep;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MultiStep\");\n$RefreshReg$(_c2, \"FormStep\");","map":{"version":3,"names":["Form","Formik","React","useState","useContext","Block","Notification","CSSTransition","SwitchTransition","InfoNotify","AppContext","Side","FormNavigation","MultiStep","children","initialValues","className","onSubmit","stepStateNumber","options","setOptions","formRef","stepNumberGlobal","setStepNumberGlobal","sideItemOptionsVP","spanshot","setSpanshot","steps","Children","toArray","step","totalSteps","length","isLastStep","console","log","next","values","indexOfNextStep","status","prevState","previous","indexOfPrevStep","handleSubmit","actions","props","setTouched","node","done","addEventListener","validationSchema","formik","errors","Object","keys","margin","entries","map","e","FormStep","stepNumber","stepName"],"sources":["C:/xampp/htdocs/om_react/src/components/VentaPresencial/Stepper/MultiStep.jsx"],"sourcesContent":["import { Form, Formik } from 'formik';\r\nimport React, { useState, useContext } from 'react';\r\nimport { Block, Notification } from 'react-bulma-components';\r\nimport { CSSTransition, SwitchTransition } from 'react-transition-group';\r\nimport InfoNotify from '../../PasarelaCobros/InfoNotify';\r\nimport { AppContext } from '../../PasarelaCobros/Provider/StateProvider';\r\nimport Side from '../Side';\r\nimport FormNavigation from '../StepControl/FormNavigation';\r\n\r\nconst MultiStep = ({\r\n  children,\r\n  initialValues,\r\n  className,\r\n  onSubmit,\r\n  stepStateNumber,\r\n}) => {\r\n  const { options, setOptions, formRef } = useContext(AppContext);\r\n\r\n  const { stepNumberGlobal, setStepNumberGlobal } = stepStateNumber;\r\n  const { sideItemOptionsVP } = options;\r\n  const [spanshot, setSpanshot] = useState(initialValues);\r\n  const steps = React.Children.toArray(children);\r\n  const step = steps[stepNumberGlobal];\r\n  const totalSteps = steps.length;\r\n  const isLastStep = stepNumberGlobal === totalSteps - 1;\r\n\r\n  console.log({ steps, step, stepNumberGlobal });\r\n\r\n  const next = (values) => {\r\n    setSpanshot(values);\r\n    const indexOfNextStep = stepNumberGlobal + 1;\r\n    sideItemOptionsVP[stepNumberGlobal].status = 'completed';\r\n    sideItemOptionsVP[indexOfNextStep].status = 'current';\r\n    setOptions((prevState) => ({\r\n      ...prevState,\r\n      sideItemOptionsVP: [...sideItemOptionsVP],\r\n    }));\r\n    //setStepNumber(stepNumber + 1);\r\n    setStepNumberGlobal((step) => step + 1);\r\n  };\r\n  const previous = (values) => {\r\n    setSpanshot(values);\r\n    const indexOfPrevStep = stepNumberGlobal - 1;\r\n    sideItemOptionsVP[stepNumberGlobal].status = '';\r\n    sideItemOptionsVP[indexOfPrevStep].status = 'current';\r\n    setOptions((prevState) => ({\r\n      ...prevState,\r\n      sideItemOptionsVP: [...sideItemOptionsVP],\r\n    }));\r\n    //setStepNumber(stepNumber - 1);\r\n    setStepNumberGlobal((step) => step - 1);\r\n  };\r\n\r\n  const handleSubmit = async (values, actions) => {\r\n    if (step.props.onSubmit) {\r\n      await step.props.onSubmit(values);\r\n    }\r\n\r\n    if (isLastStep) {\r\n      return onSubmit(values, actions);\r\n    } else {\r\n      actions.setTouched({});\r\n      next(values);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SwitchTransition>\r\n      <CSSTransition\r\n        key={stepNumberGlobal}\r\n        addEndListener={(node, done) =>\r\n          node.addEventListener('transitionend', done, false)\r\n        }\r\n        classNames=\"fade\"\r\n      >\r\n        <Formik\r\n          initialValues={spanshot}\r\n          onSubmit={handleSubmit}\r\n          validationSchema={step.props.validationSchema}\r\n        >\r\n          {(formik) => (\r\n            <>\r\n              <Form className={className} ref={formRef}>\r\n                {step}\r\n                {formik.errors && Object.keys(formik.errors).length > 0 && (\r\n                  <Block style={{ margin: '1rem 0' }}>\r\n                    <Notification color=\"danger\" light=\"true\">\r\n                      {Object.entries(formik.errors).map((e) => (\r\n                        <p key={e[0]} className=\"field\">\r\n                          {e[1]}\r\n                        </p>\r\n                      ))}\r\n                    </Notification>\r\n                  </Block>\r\n                )}\r\n                {formik.values &&\r\n                  Object.entries(formik.values).map((e) => {\r\n                    return <InfoNotify key={e[0]} messages={e} />;\r\n                  })}\r\n                <FormNavigation\r\n                  isLastStep={isLastStep}\r\n                  hasPrevious={stepNumberGlobal > 0}\r\n                  onBackClick={() => previous(formik.values)}\r\n                />\r\n              </Form>\r\n              <Side\r\n                options={options.sideItemOptionsVP}\r\n                stepStateNumber={{ stepNumberGlobal, setStepNumberGlobal }}\r\n                formikInstance={formik}\r\n              />\r\n              {/*  <pre>{JSON.stringify(formik, null, 2)}</pre> */}\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </CSSTransition>\r\n    </SwitchTransition>\r\n  );\r\n};\r\n\r\nexport default MultiStep;\r\nexport const FormStep = ({ stepNumber = 0, stepName = '', children }) => {\r\n  return (\r\n    <>\r\n      {stepNumber !== 0 && (\r\n        <h2 className=\"title is-4\">\r\n          <span className=\"has-text-white has-background-black is-circle\">\r\n            {stepNumber}\r\n          </span>\r\n          {stepName}\r\n        </h2>\r\n      )}\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}